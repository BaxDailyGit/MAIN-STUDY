; 1. ctrl+r :	load IDs in file data 
; 2. a :		Enter the one index ID
; 3. q,w,e,r :	select the appropriate year
; 4. s :		copy the text in information navigator
; 5. d,f :		set the line
; 6. g : 		save copied text to a text file


data :=""

stopFlag = 0
reIndicateFlag = 0


idIdx = 1
idArray:= Object()
idArrayLen = 0
currentID = 0

;-----------------------------------------------------

idTxtName = 2013index\2020_ID.txt

destTxtName =2013index\2020_result.txt

;-----------------------------------------------------
xpos = 0
ypos = 0


;gui
Gui, New, hwndhGui AlwaysOnTop
Gui, Add, Text,, Temp window %idIdx%
Gui, Add, Edit, x21 y45 w500 h19 vName r5, Edit
Gui, Add, Button, x50 y150 w100 h30 gPush_Button, read
Gui, Show









Push_Button: 

Gui,Submit,nohide ;gui내용 가져오기(동적할당 하도록 수정하기)

global data_1
global data_2
global data_3
global data_4
global data_5
global data_6
global data_7
global data_8
global data_9
global data_10
global data_11
global data_12
global data_13
global data_14
global data_15
global data_16
global data_17
global data_18
global data_19
global data_20
global data_21
global data_22
global data_23
global data_24
global data_25
global data_26
global data_27
global data_28
global data_29
global data_30
global data_31
global data_32
global data_33
global data_34
global data_35
global data_36
global data_37
global data_38
global data_39
global data_40







global idIdx





num:=idArray[idIdx]

nextid=nextid

newline=newline


; name parsing needed
parsed_temp_window := StrSplit(Name,["`n" ])
;(Array_반환값_문자열(객체)의 배열 , String(분리할 문자열),Delimiters) 

data_1 := nextid . num . parsed_temp_window[1] . newline
data_2 := parsed_temp_window[2] . newline
data_3 := parsed_temp_window[3] . newline
data_4 := parsed_temp_window[4] . newline
data_5 := parsed_temp_window[5] . newline
data_6 := parsed_temp_window[6] . newline
data_7 := parsed_temp_window[7] . newline
data_8 := parsed_temp_window[8] . newline
data_9 := parsed_temp_window[9] . newline
data_10 := parsed_temp_window[10] . newline
data_11 := parsed_temp_window[11] . newline
data_12 := parsed_temp_window[12] . newline
data_13 := parsed_temp_window[13] . newline
data_14 := parsed_temp_window[14] . newline
data_15 := parsed_temp_window[15] . newline
data_16 := parsed_temp_window[16] . newline
data_17 := parsed_temp_window[17] . newline
data_18 := parsed_temp_window[18] . newline
data_19 := parsed_temp_window[19] . newline
data_20 := parsed_temp_window[20] . newline
data_21 := parsed_temp_window[21] . newline
data_22 := parsed_temp_window[22] . newline
data_23 := parsed_temp_window[23] . newline
data_24 := parsed_temp_window[24] . newline
data_25 := parsed_temp_window[25] . newline
data_26 := parsed_temp_window[26] . newline
data_27 := parsed_temp_window[27] . newline
data_28 := parsed_temp_window[28] . newline
data_29 := parsed_temp_window[29] . newline
data_30 := parsed_temp_window[30] . newline
data_31 := parsed_temp_window[31] . newline
data_32 := parsed_temp_window[32] . newline
data_33 := parsed_temp_window[33] . newline
data_34 := parsed_temp_window[34] . newline
data_35 := parsed_temp_window[35] . newline
data_36 := parsed_temp_window[36] . newline
data_37 := parsed_temp_window[37] . newline
data_38 := parsed_temp_window[38] . newline
data_39 := parsed_temp_window[39] . newline
data_40 := parsed_temp_window[40] . newline
return























^r:: ; 1. load IDs in file data

Loop, Read,C:\Users\ajounm\Desktop\AutoHotkey\result_of\%idTxtName%
{
	idArray.insert(A_LoopReadLine)
	idArrayLen++
}

Msgbox, "Reading proccess complete"


return 












a:: ; 2. when press some keys, then Search Id


currentID := idArray[idIdx]


if !currentID 
{
	Msgbox, "currentID empty"
	return
}


Mousemove, 200, 150
Sleep, 100


; insert
MouseClick
Sleep, 100
Send, {%currentID%
Sleep, 100
Send, {Enter}
Sleep, 100


return









s::


Mousemove, 110, 1165
Click, down
Sleep, 60
Mousemove, 110, 1500
Sleep, 500

return






d::
Mousemove,  0, 10, ,R
return

f::
Mousemove,  0, -10, ,R
return










g:: 

copy_and_savefile()

push_Button()

write_text()

idIdx ++

back_infinitt()


return 











q::
Mousemove, 1050, 200
MouseClick
Sleep, 500
MouseClick
return


w::
Mousemove, 1050, 220
MouseClick
return

e::
Mousemove, 1050, 240
MouseClick
return

r::
Mousemove, 1050, 260
MouseClick
return























copy_and_savefile(){ 

	Click, up

	Send ^c
	Sleep, 50
	
	MouseClick, left, 350, 915 ; temp Window; 수정하기
	Send, ^a ;전체선택
	Sleep, 100
	Send, {Backspace} ;백스페이스
	Sleep, 100
	Send ^v
	Sleep, 100

	
	MouseClick, left, %xpos%, %ypos%
	Sleep, 500
}









push_Button(){
	global xpos
	global ypos

	Sleep, 50
	MouseClick, left, 100, 200 ;  push button
	Sleep, 100
	Click, down
	Sleep, 50
	Click, up
	;MouseClick, left, %xpos%, %ypos% ; return to origin of mouse position
}















write_text(){
	
	global destTxtName 

	FileAppend, %data_1% %data_2% %data_3% %data_4% %data_5% %data_6% %data_7% %data_8% %data_9% %data_10% %data_11% %data_12% %data_13% %data_14% %data_15% %data_16% %data_17% %data_18% %data_19% %data_20% %data_21% %data_22% %data_23% %data_24% %data_25% %data_26% %data_27% %data_28% %data_29% %data_30% %data_31% %data_32% %data_33% %data_34% %data_35% %data_36% %data_37% %data_38% %data_39% %data_40% ,C:\Users\ajounm\Desktop\AutoHotkey\result_of\%destTxtName%
}




back_infinitt(){


	MouseClick, left, -740, 50
}



^ESC::
	ExitApp

GuiClose:
	ExitApp